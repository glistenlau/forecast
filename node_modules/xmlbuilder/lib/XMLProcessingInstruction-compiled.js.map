{"version":3,"sources":["XMLProcessingInstruction.js"],"names":[],"mappings":";AACA,CAAC,YAAW;AACV,MAAI,wBAAwB,EAAE,MAAM,CAAC;;AAErC,QAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;;AAEzC,QAAM,CAAC,OAAO,GAAG,wBAAwB,GAAG,CAAC,YAAW;AACtD,aAAS,wBAAwB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AACvD,UAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AAClC,UAAI,MAAM,IAAI,IAAI,EAAE;AAClB,cAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;OAC/C;AACD,UAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC/C,UAAI,KAAK,EAAE;AACT,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;OAC7C;KACF;;AAED,4BAAwB,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AACpD,aAAO,MAAM,CAAC,wBAAwB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACzD,CAAC;;AAEF,4BAAwB,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAS,OAAO,EAAE,KAAK,EAAE;AACrE,UAAI,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AAC/D,YAAM,GAAG,CAAC,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA,IAAK,KAAK,CAAC;AAC9D,YAAM,GAAG,CAAC,GAAG,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA,IAAK,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;AAChF,YAAM,GAAG,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA,IAAK,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAC/E,aAAO,GAAG,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,CAAA,IAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AACpF,WAAK,KAAK,KAAK,GAAG,CAAC,CAAA,AAAC,CAAC;AACrB,WAAK,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnD,OAAC,GAAG,EAAE,CAAC;AACP,UAAI,MAAM,EAAE;AACV,SAAC,IAAI,KAAK,CAAC;OACZ;AACD,OAAC,IAAI,IAAI,CAAC;AACV,OAAC,IAAI,IAAI,CAAC,MAAM,CAAC;AACjB,UAAI,IAAI,CAAC,KAAK,EAAE;AACd,SAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;OACvB;AACD,OAAC,IAAI,IAAI,CAAC;AACV,UAAI,MAAM,EAAE;AACV,SAAC,IAAI,OAAO,CAAC;OACd;AACD,aAAO,CAAC,CAAC;KACV,CAAC;;AAEF,WAAO,wBAAwB,CAAC;GAEjC,CAAA,EAAG,CAAC;CAEN,CAAA,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC","file":"XMLProcessingInstruction-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.9.1\n(function() {\n  var XMLProcessingInstruction, create;\n\n  create = require('lodash/object/create');\n\n  module.exports = XMLProcessingInstruction = (function() {\n    function XMLProcessingInstruction(parent, target, value) {\n      this.stringify = parent.stringify;\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return create(XMLProcessingInstruction.prototype, this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<?';\n      r += this.target;\n      if (this.value) {\n        r += ' ' + this.value;\n      }\n      r += '?>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLProcessingInstruction;\n\n  })();\n\n}).call(this);\n"]}