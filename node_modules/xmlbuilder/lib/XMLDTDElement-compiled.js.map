{"version":3,"sources":["XMLDTDElement.js"],"names":[],"mappings":";AACA,CAAC,YAAW;AACV,MAAI,aAAa,EAAE,MAAM,CAAC;;AAE1B,QAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;;AAEzC,QAAM,CAAC,OAAO,GAAG,aAAa,GAAG,CAAC,YAAW;AAC3C,aAAS,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAC1C,UAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AAClC,UAAI,IAAI,IAAI,IAAI,EAAE;AAChB,cAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;OAC7C;AACD,UAAI,CAAC,KAAK,EAAE;AACV,aAAK,GAAG,WAAW,CAAC;OACrB;AACD,UAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACxB,aAAK,GAAG,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;OACrC;AACD,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACzC,UAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KACpD;;AAED,iBAAa,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAS,OAAO,EAAE,KAAK,EAAE;AAC1D,UAAI,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AAC/D,YAAM,GAAG,CAAC,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA,IAAK,KAAK,CAAC;AAC9D,YAAM,GAAG,CAAC,GAAG,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA,IAAK,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;AAChF,YAAM,GAAG,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA,IAAK,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAC/E,aAAO,GAAG,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,CAAA,IAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AACpF,WAAK,KAAK,KAAK,GAAG,CAAC,CAAA,AAAC,CAAC;AACrB,WAAK,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnD,OAAC,GAAG,EAAE,CAAC;AACP,UAAI,MAAM,EAAE;AACV,SAAC,IAAI,KAAK,CAAC;OACZ;AACD,OAAC,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACvD,UAAI,MAAM,EAAE;AACV,SAAC,IAAI,OAAO,CAAC;OACd;AACD,aAAO,CAAC,CAAC;KACV,CAAC;;AAEF,WAAO,aAAa,CAAC;GAEtB,CAAA,EAAG,CAAC;CAEN,CAAA,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC","file":"XMLDTDElement-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.9.1\n(function() {\n  var XMLDTDElement, create;\n\n  create = require('lodash/object/create');\n\n  module.exports = XMLDTDElement = (function() {\n    function XMLDTDElement(parent, name, value) {\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options, level) {\n      var indent, newline, offset, pretty, r, ref, ref1, ref2, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (ref = options != null ? options.indent : void 0) != null ? ref : '  ';\n      offset = (ref1 = options != null ? options.offset : void 0) != null ? ref1 : 0;\n      newline = (ref2 = options != null ? options.newline : void 0) != null ? ref2 : '\\n';\n      level || (level = 0);\n      space = new Array(level + offset + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!ELEMENT ' + this.name + ' ' + this.value + '>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLDTDElement;\n\n  })();\n\n}).call(this);\n"]}