{"version":3,"sources":["sax.js"],"names":[],"mappings":"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","file":"sax-compiled.js","sourcesContent":[";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // character classes and tokens\n  var whitespace = '\\r\\n\\t '\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var number = '0124356789'\n  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  // (Letter | \"_\" | \":\")\n  var quote = '\\'\"'\n  var attribEnd = whitespace + '>'\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // turn all the string character sets into character class objects.\n  whitespace = charClass(whitespace)\n  number = charClass(number)\n  letter = charClass(letter)\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  quote = charClass(quote)\n  attribEnd = charClass(attribEnd)\n\n  function charClass (str) {\n    return str.split('').reduce(function (s, c) {\n      s[c] = true\n      return s\n    }, {})\n  }\n\n  function isRegExp (c) {\n    return Object.prototype.toString.call(c) === '[object RegExp]'\n  }\n\n  function is (charclass, c) {\n    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n  }\n\n  function not (charclass, c) {\n    return !is(charclass, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (not(whitespace, c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = chunk.charAt(i++)\n      parser.c = c\n      if (!c) {\n        break\n      }\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = chunk.charAt(i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (is(whitespace, c)) {\n            // wait for it...\n          } else if (is(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (is(quote, c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (is(quote, c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (is(whitespace, c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && is(whitespace, c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (is(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (not(whitespace, c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (is(whitespace, c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (is(whitespace, c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (is(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (is(whitespace, c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (is(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (is(whitespace, c)) {\n            continue\n          } else if (is(quote, c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (is(whitespace, c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (not(attribEnd, c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (is(whitespace, c)) {\n              continue\n            } else if (not(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (is(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (not(whitespace, c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (is(whitespace, c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n"]}