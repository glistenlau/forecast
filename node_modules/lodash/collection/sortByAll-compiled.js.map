{"version":3,"sources":["sortByAll.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;IAChD,eAAe,GAAG,OAAO,CAAC,6BAA6B,CAAC;IACxD,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACtD,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAqCjD,IAAI,SAAS,GAAG,SAAS,CAAC,UAAS,UAAU,EAAE,SAAS,EAAE;AACxD,MAAI,UAAU,IAAI,IAAI,EAAE;AACtB,WAAO,EAAE,CAAC;GACX;AACD,MAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACzB,MAAI,KAAK,IAAI,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;AAC9D,aAAS,CAAC,MAAM,GAAG,CAAC,CAAC;GACtB;AACD,SAAO,eAAe,CAAC,UAAU,EAAE,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;CAChE,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"sortByAll-compiled.js","sourcesContent":["var baseFlatten = require('../internal/baseFlatten'),\n    baseSortByOrder = require('../internal/baseSortByOrder'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    restParam = require('../function/restParam');\n\n/**\n * This method is like `_.sortBy` except that it can sort by multiple iteratees\n * or property names.\n *\n * If a property name is provided for an iteratee the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If an object is provided for an iteratee the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n *  The iteratees to sort by, specified as individual values or arrays of values.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 42 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n *\n * _.map(_.sortByAll(users, 'user', function(chr) {\n *   return Math.floor(chr.age / 10);\n * }), _.values);\n * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n */\nvar sortByAll = restParam(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var guard = iteratees[2];\n  if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n    iteratees.length = 1;\n  }\n  return baseSortByOrder(collection, baseFlatten(iteratees), []);\n});\n\nmodule.exports = sortByAll;\n"]}