{"version":3,"sources":["at.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC;IACtC,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;IAChD,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;;;;;;;;;;;;;;;;;;;;;;AAAC,AAsBjD,IAAI,EAAE,GAAG,SAAS,CAAC,UAAS,UAAU,EAAE,KAAK,EAAE;AAC7C,SAAO,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;CAC/C,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC","file":"at-compiled.js","sourcesContent":["var baseAt = require('../internal/baseAt'),\n    baseFlatten = require('../internal/baseFlatten'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates an array of elements corresponding to the given keys, or indexes,\n * of `collection`. Keys may be specified as individual arguments or as arrays\n * of keys.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {...(number|number[]|string|string[])} [props] The property names\n *  or indexes of elements to pick, specified individually or in arrays.\n * @returns {Array} Returns the new array of picked elements.\n * @example\n *\n * _.at(['a', 'b', 'c'], [0, 2]);\n * // => ['a', 'c']\n *\n * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n * // => ['barney', 'pebbles']\n */\nvar at = restParam(function(collection, props) {\n  return baseAt(collection, baseFlatten(props));\n});\n\nmodule.exports = at;\n"]}