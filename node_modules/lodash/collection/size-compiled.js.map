{"version":3,"sources":["size.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC;IAC1C,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;AAAC,AAsBrC,SAAS,IAAI,CAAC,UAAU,EAAE;AACxB,MAAI,MAAM,GAAG,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACpD,SAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;CAC5D;;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC","file":"size-compiled.js","sourcesContent":["var getLength = require('../internal/getLength'),\n    isLength = require('../internal/isLength'),\n    keys = require('../object/keys');\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable properties for objects.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the size of `collection`.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  var length = collection ? getLength(collection) : 0;\n  return isLength(length) ? length : keys(collection).length;\n}\n\nmodule.exports = size;\n"]}