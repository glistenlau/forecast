{"version":3,"sources":["once.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC;;;;;;;;;;;;;;;;;;;AAAC,AAmBjC,SAAS,IAAI,CAAC,IAAI,EAAE;AAClB,SAAO,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACxB;;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC","file":"once-compiled.js","sourcesContent":["var before = require('./before');\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first call. The `func` is invoked\n * with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // `initialize` invokes `createApplication` once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nmodule.exports = once;\n"]}