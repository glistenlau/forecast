{"version":3,"sources":["ary.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,GAAG,OAAO,CAAC,2BAA2B,CAAC;IACpD,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;;;AAAC,AAG3D,IAAI,QAAQ,GAAG,GAAG;;;AAAC,AAGnB,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG;;;;;;;;;;;;;;;;;;AAAC,AAkBzB,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE;AAC3B,MAAI,KAAK,IAAI,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE;AAC3C,KAAC,GAAG,SAAS,CAAC;GACf;AACD,GAAC,GAAG,AAAC,IAAI,IAAI,CAAC,IAAI,IAAI,GAAI,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9D,SAAO,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;CACrF;;AAED,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"ary-compiled.js","sourcesContent":["var createWrapper = require('../internal/createWrapper'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar ARY_FLAG = 128;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that accepts up to `n` arguments ignoring any\n * additional arguments.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @param {number} [n=func.length] The arity cap.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {Function} Returns the new function.\n * @example\n *\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n * // => [6, 8, 10]\n */\nfunction ary(func, n, guard) {\n  if (guard && isIterateeCall(func, n, guard)) {\n    n = undefined;\n  }\n  n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n  return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n}\n\nmodule.exports = ary;\n"]}