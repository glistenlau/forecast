{"version":3,"sources":["before.js"],"names":[],"mappings":";AACA,IAAI,eAAe,GAAG,qBAAqB;;;;;;;;;;;;;;;;;;AAAC,AAkB5C,SAAS,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE;AACvB,MAAI,MAAM,CAAC;AACX,MAAI,OAAO,IAAI,IAAI,UAAU,EAAE;AAC7B,QAAI,OAAO,CAAC,IAAI,UAAU,EAAE;AAC1B,UAAI,IAAI,GAAG,CAAC,CAAC;AACb,OAAC,GAAG,IAAI,CAAC;AACT,UAAI,GAAG,IAAI,CAAC;KACb,MAAM;AACL,YAAM,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC;KACtC;GACF;AACD,SAAO,YAAW;AAChB,QAAI,EAAE,CAAC,GAAG,CAAC,EAAE;AACX,YAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KACtC;AACD,QAAI,CAAC,IAAI,CAAC,EAAE;AACV,UAAI,GAAG,SAAS,CAAC;KAClB;AACD,WAAO,MAAM,CAAC;GACf,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"before-compiled.js","sourcesContent":["/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery('#add').on('click', _.before(5, addContactToList));\n * // => allows adding up to 4 contacts to the list\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    if (typeof n == 'function') {\n      var temp = n;\n      n = func;\n      func = temp;\n    } else {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n  }\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nmodule.exports = before;\n"]}