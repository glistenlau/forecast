{"version":3,"sources":["toArray.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC;IAC1C,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC;;;;;;;;;;;;;;;;;AAAC,AAiBzC,SAAS,OAAO,CAAC,KAAK,EAAE;AACtB,MAAI,MAAM,GAAG,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC1C,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACrB,WAAO,MAAM,CAAC,KAAK,CAAC,CAAC;GACtB;AACD,MAAI,CAAC,MAAM,EAAE;AACX,WAAO,EAAE,CAAC;GACX;AACD,SAAO,SAAS,CAAC,KAAK,CAAC,CAAC;CACzB;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"toArray-compiled.js","sourcesContent":["var arrayCopy = require('../internal/arrayCopy'),\n    getLength = require('../internal/getLength'),\n    isLength = require('../internal/isLength'),\n    values = require('../object/values');\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * (function() {\n *   return _.toArray(arguments).slice(1);\n * }(1, 2, 3));\n * // => [2, 3]\n */\nfunction toArray(value) {\n  var length = value ? getLength(value) : 0;\n  if (!isLength(length)) {\n    return values(value);\n  }\n  if (!length) {\n    return [];\n  }\n  return arrayCopy(value);\n}\n\nmodule.exports = toArray;\n"]}