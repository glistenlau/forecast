{"version":3,"sources":["forInRight.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;IAClD,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AA2BrD,IAAI,UAAU,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;;AAE3C,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"forInRight-compiled.js","sourcesContent":["var baseForRight = require('../internal/baseForRight'),\n    createForIn = require('../internal/createForIn');\n\n/**\n * This method is like `_.forIn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forInRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n */\nvar forInRight = createForIn(baseForRight);\n\nmodule.exports = forInRight;\n"]}