{"version":3,"sources":["forIn.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,qBAAqB,CAAC;IACxC,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AA6BrD,IAAI,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEjC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"forIn-compiled.js","sourcesContent":["var baseFor = require('../internal/baseFor'),\n    createForIn = require('../internal/createForIn');\n\n/**\n * Iterates over own and inherited enumerable properties of an object invoking\n * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n */\nvar forIn = createForIn(baseFor);\n\nmodule.exports = forIn;\n"]}