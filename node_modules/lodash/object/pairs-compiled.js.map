{"version":3,"sources":["pairs.js"],"names":[],"mappings":"AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;IACxB,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC;;;;;;;;;;;;;;;;AAAC,AAgB/C,SAAS,KAAK,CAAC,MAAM,EAAE;AACrB,QAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;;AAE1B,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;MACpB,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;;AAE3B,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACvB,UAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;GACpC;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"pairs-compiled.js","sourcesContent":["var keys = require('./keys'),\n    toObject = require('../internal/toObject');\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n"]}