{"version":3,"sources":["times.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;;;AAAC,AAGvD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK;IACxB,cAAc,GAAG,MAAM,CAAC,QAAQ;IAChC,SAAS,GAAG,IAAI,CAAC,GAAG;;;AAAC,AAGzB,IAAI,gBAAgB,GAAG,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AA6BlC,SAAS,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;AACnC,GAAC,GAAG,WAAW,CAAC,CAAC,CAAC;;;;AAAC,AAInB,MAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AAC/B,WAAO,EAAE,CAAC;GACX;AACD,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC;;AAEnD,UAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC9C,SAAO,EAAE,KAAK,GAAG,CAAC,EAAE;AAClB,QAAI,KAAK,GAAG,gBAAgB,EAAE;AAC5B,YAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;KACjC,MAAM;AACL,cAAQ,CAAC,KAAK,CAAC,CAAC;KACjB;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"times-compiled.js","sourcesContent":["var bindCallback = require('../internal/bindCallback');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeIsFinite = global.isFinite,\n    nativeMin = Math.min;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Invokes the iteratee function `n` times, returning an array of the results\n * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n * one argument; (index).\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n * // => [3, 6, 4]\n *\n * _.times(3, function(n) {\n *   mage.castSpell(n);\n * });\n * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n *\n * _.times(3, function(n) {\n *   this.cast(n);\n * }, mage);\n * // => also invokes `mage.castSpell(n)` three times\n */\nfunction times(n, iteratee, thisArg) {\n  n = nativeFloor(n);\n\n  // Exit early to avoid a JSC JIT bug in Safari 8\n  // where `Array(0)` is treated as `Array(1)`.\n  if (n < 1 || !nativeIsFinite(n)) {\n    return [];\n  }\n  var index = -1,\n      result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n  iteratee = bindCallback(iteratee, thisArg, 1);\n  while (++index < n) {\n    if (index < MAX_ARRAY_LENGTH) {\n      result[index] = iteratee(index);\n    } else {\n      iteratee(index);\n    }\n  }\n  return result;\n}\n\nmodule.exports = times;\n"]}