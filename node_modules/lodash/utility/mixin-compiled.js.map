{"version":3,"sources":["mixin.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,aAAa,GAAG,OAAO,CAAC,2BAA2B,CAAC;IACpD,UAAU,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAC1C,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACtC,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAsCrC,SAAS,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;AACtC,MAAI,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;AAEtD,MAAI,KAAK,GAAG,IAAI;MACZ,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;MAC3B,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;;AAEhC,MAAI,OAAO,KAAK,KAAK,EAAE;AACrB,SAAK,GAAG,KAAK,CAAC;GACf,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,IAAI,OAAO,EAAE;AAClD,SAAK,GAAG,OAAO,CAAC,KAAK,CAAC;GACvB;AACD,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC;QAC/B,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;;AAE9B,UAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;AAC1B,QAAI,MAAM,EAAE;AACV,YAAM,CAAC,SAAS,CAAC,UAAU,CAAC,GAAI,CAAA,UAAS,IAAI,EAAE;AAC7C,eAAO,YAAW;AAChB,cAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AAC9B,cAAI,KAAK,IAAI,QAAQ,EAAE;AACrB,gBAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;gBACjC,OAAO,GAAG,MAAM,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAE/D,mBAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;AACrE,kBAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC5B,mBAAO,MAAM,CAAC;WACf;AACD,iBAAO,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;SACjE,CAAC;OACH,CAAA,CAAC,IAAI,CAAC,AAAC,CAAC;KACV;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"mixin-compiled.js","sourcesContent":["var arrayCopy = require('../internal/arrayCopy'),\n    arrayPush = require('../internal/arrayPush'),\n    baseFunctions = require('../internal/baseFunctions'),\n    isFunction = require('../lang/isFunction'),\n    isObject = require('../lang/isObject'),\n    keys = require('../object/keys');\n\n/**\n * Adds all own enumerable function properties of a source object to the\n * destination object. If `object` is a function then methods are added to\n * its prototype as well.\n *\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n * avoid conflicts caused by modifying the original.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Function|Object} [object=lodash] The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.chain=true] Specify whether the functions added\n *  are chainable.\n * @returns {Function|Object} Returns `object`.\n * @example\n *\n * function vowels(string) {\n *   return _.filter(string, function(v) {\n *     return /[aeiou]/i.test(v);\n *   });\n * }\n *\n * _.mixin({ 'vowels': vowels });\n * _.vowels('fred');\n * // => ['e']\n *\n * _('fred').vowels().value();\n * // => ['e']\n *\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\n * _('fred').vowels();\n * // => ['e']\n */\nfunction mixin(object, source, options) {\n  var methodNames = baseFunctions(source, keys(source));\n\n  var chain = true,\n      index = -1,\n      isFunc = isFunction(object),\n      length = methodNames.length;\n\n  if (options === false) {\n    chain = false;\n  } else if (isObject(options) && 'chain' in options) {\n    chain = options.chain;\n  }\n  while (++index < length) {\n    var methodName = methodNames[index],\n        func = source[methodName];\n\n    object[methodName] = func;\n    if (isFunc) {\n      object.prototype[methodName] = (function(func) {\n        return function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = arrayCopy(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }(func));\n    }\n  }\n  return object;\n}\n\nmodule.exports = mixin;\n"]}