{"version":3,"sources":["unzipWith.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC;IAC1C,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;IAChD,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;IAClD,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;AAAC,AAsB/B,SAAS,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC3C,MAAI,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACtC,MAAI,CAAC,MAAM,EAAE;AACX,WAAO,EAAE,CAAC;GACX;AACD,MAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAC1B,MAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,WAAO,MAAM,CAAC;GACf;AACD,UAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC9C,SAAO,QAAQ,CAAC,MAAM,EAAE,UAAS,KAAK,EAAE;AACtC,WAAO,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;GACtD,CAAC,CAAC;CACJ;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"unzipWith-compiled.js","sourcesContent":["var arrayMap = require('../internal/arrayMap'),\n    arrayReduce = require('../internal/arrayReduce'),\n    bindCallback = require('../internal/bindCallback'),\n    unzip = require('./unzip');\n\n/**\n * This method is like `_.unzip` except that it accepts an iteratee to specify\n * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n * and invoked with four arguments: (accumulator, value, index, group).\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee] The function to combine regrouped values.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */\nfunction unzipWith(array, iteratee, thisArg) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  var result = unzip(array);\n  if (iteratee == null) {\n    return result;\n  }\n  iteratee = bindCallback(iteratee, thisArg, 4);\n  return arrayMap(result, function(group) {\n    return arrayReduce(group, iteratee, undefined, true);\n  });\n}\n\nmodule.exports = unzipWith;\n"]}