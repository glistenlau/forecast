{"version":3,"sources":["xor.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACtD,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC;IAC1C,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;;;;;;;;;;;;;;;;AAAC,AAgBrD,SAAS,GAAG,GAAG;AACb,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;;AAE9B,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAI,WAAW,CAAC,KAAK,CAAC,EAAE;AACtB,UAAI,MAAM,GAAG,MAAM,GACf,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GACvE,KAAK,CAAC;KACX;GACF;AACD,SAAO,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;CACvC;;AAED,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"xor-compiled.js","sourcesContent":["var arrayPush = require('../internal/arrayPush'),\n    baseDifference = require('../internal/baseDifference'),\n    baseUniq = require('../internal/baseUniq'),\n    isArrayLike = require('../internal/isArrayLike');\n\n/**\n * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the provided arrays.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of values.\n * @example\n *\n * _.xor([1, 2], [4, 2]);\n * // => [1, 4]\n */\nfunction xor() {\n  var index = -1,\n      length = arguments.length;\n\n  while (++index < length) {\n    var array = arguments[index];\n    if (isArrayLike(array)) {\n      var result = result\n        ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n        : array;\n    }\n  }\n  return result ? baseUniq(result) : [];\n}\n\nmodule.exports = xor;\n"]}