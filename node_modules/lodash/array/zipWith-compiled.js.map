{"version":3,"sources":["zipWith.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC;;;;;;;;;;;;;;;;;;;AAAC,AAmBvC,IAAI,OAAO,GAAG,SAAS,CAAC,UAAS,MAAM,EAAE;AACvC,MAAI,MAAM,GAAG,MAAM,CAAC,MAAM;MACtB,QAAQ,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS;MACtD,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;;AAE1D,MAAI,MAAM,GAAG,CAAC,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;AAC/C,UAAM,IAAI,CAAC,CAAC;GACb,MAAM;AACL,YAAQ,GAAG,AAAC,MAAM,GAAG,CAAC,IAAI,OAAO,OAAO,IAAI,UAAU,IAAK,EAAE,MAAM,EAAE,OAAO,CAAA,GAAI,SAAS,CAAC;AAC1F,WAAO,GAAG,SAAS,CAAC;GACrB;AACD,QAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,SAAO,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;CAC7C,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"zipWith-compiled.js","sourcesContent":["var restParam = require('../function/restParam'),\n    unzipWith = require('./unzipWith');\n\n/**\n * This method is like `_.zip` except that it accepts an iteratee to specify\n * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n * and invoked with four arguments: (accumulator, value, index, group).\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee] The function to combine grouped values.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n * // => [111, 222]\n */\nvar zipWith = restParam(function(arrays) {\n  var length = arrays.length,\n      iteratee = length > 2 ? arrays[length - 2] : undefined,\n      thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n  if (length > 2 && typeof iteratee == 'function') {\n    length -= 2;\n  } else {\n    iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n    thisArg = undefined;\n  }\n  arrays.length = length;\n  return unzipWith(arrays, iteratee, thisArg);\n});\n\nmodule.exports = zipWith;\n"]}