{"version":3,"sources":["zipObject.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAuBzC,SAAS,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE;AAChC,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;MACjC,MAAM,GAAG,EAAE,CAAC;;AAEhB,MAAI,MAAM,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3C,UAAM,GAAG,EAAE,CAAC;GACb;AACD,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACvB,QAAI,MAAM,EAAE;AACV,YAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;KAC7B,MAAM,IAAI,GAAG,EAAE;AACd,YAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KACzB;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"zipObject-compiled.js","sourcesContent":["var isArray = require('../lang/isArray');\n\n/**\n * The inverse of `_.pairs`; this method returns an object composed from arrays\n * of property names and values. Provide either a single two dimensional array,\n * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n * and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @alias object\n * @category Array\n * @param {Array} props The property names.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject([['fred', 30], ['barney', 40]]);\n * // => { 'fred': 30, 'barney': 40 }\n *\n * _.zipObject(['fred', 'barney'], [30, 40]);\n * // => { 'fred': 30, 'barney': 40 }\n */\nfunction zipObject(props, values) {\n  var index = -1,\n      length = props ? props.length : 0,\n      result = {};\n\n  if (length && !values && !isArray(props[0])) {\n    values = [];\n  }\n  while (++index < length) {\n    var key = props[index];\n    if (values) {\n      result[key] = values[index];\n    } else if (key) {\n      result[key[0]] = key[1];\n    }\n  }\n  return result;\n}\n\nmodule.exports = zipObject;\n"]}