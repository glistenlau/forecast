{"version":3,"sources":["baseClone.js"],"names":[],"mappings":"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","file":"baseClone-compiled.js","sourcesContent":["var arrayCopy = require('./arrayCopy'),\n    arrayEach = require('./arrayEach'),\n    baseAssign = require('./baseAssign'),\n    baseForOwn = require('./baseForOwn'),\n    initCloneArray = require('./initCloneArray'),\n    initCloneByTag = require('./initCloneByTag'),\n    initCloneObject = require('./initCloneObject'),\n    isArray = require('../lang/isArray'),\n    isObject = require('../lang/isObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n"]}