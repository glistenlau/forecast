{"version":3,"sources":["createPadding.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC;;;AAAC,AAGzC,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI;IACtB,cAAc,GAAG,MAAM,CAAC,QAAQ;;;;;;;;;;;;AAAC,AAYrC,SAAS,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AAC5C,MAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;AAC9B,QAAM,GAAG,CAAC,MAAM,CAAC;;AAEjB,MAAI,SAAS,IAAI,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AAClD,WAAO,EAAE,CAAC;GACX;AACD,MAAI,SAAS,GAAG,MAAM,GAAG,SAAS,CAAC;AACnC,OAAK,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,GAAI,KAAK,GAAG,EAAE,AAAC,CAAC;AAC3C,SAAO,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;CAChF;;AAED,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC","file":"createPadding-compiled.js","sourcesContent":["var repeat = require('../string/repeat');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeIsFinite = global.isFinite;\n\n/**\n * Creates the padding required for `string` based on the given `length`.\n * The `chars` string is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {string} string The string to create padding for.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the pad for `string`.\n */\nfunction createPadding(string, length, chars) {\n  var strLength = string.length;\n  length = +length;\n\n  if (strLength >= length || !nativeIsFinite(length)) {\n    return '';\n  }\n  var padLength = length - strLength;\n  chars = chars == null ? ' ' : (chars + '');\n  return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n}\n\nmodule.exports = createPadding;\n"]}