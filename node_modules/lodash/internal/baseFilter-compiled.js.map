{"version":3,"sources":["baseFilter.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;;;;;;;;;;;AAAC,AAWrC,SAAS,UAAU,CAAC,UAAU,EAAE,SAAS,EAAE;AACzC,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,UAAQ,CAAC,UAAU,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE;AACtD,QAAI,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,EAAE;AACvC,YAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpB;GACF,CAAC,CAAC;AACH,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"baseFilter-compiled.js","sourcesContent":["var baseEach = require('./baseEach');\n\n/**\n * The base implementation of `_.filter` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"]}