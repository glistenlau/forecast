{"version":3,"sources":["LodashWrapper.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC;IACpC,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC;;;;;;;;;;AAAC,AAUzC,SAAS,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC/C,MAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,MAAI,CAAC,WAAW,GAAG,OAAO,IAAI,EAAE,CAAC;AACjC,MAAI,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC;CAC7B;;AAED,aAAa,CAAC,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAC3D,aAAa,CAAC,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;;AAEpD,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC","file":"LodashWrapper-compiled.js","sourcesContent":["var baseCreate = require('./baseCreate'),\n    baseLodash = require('./baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n */\nfunction LodashWrapper(value, chainAll, actions) {\n  this.__wrapped__ = value;\n  this.__actions__ = actions || [];\n  this.__chain__ = !!chainAll;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n"]}