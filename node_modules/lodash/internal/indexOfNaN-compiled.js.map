{"version":3,"sources":["indexOfNaN.js"],"names":[],"mappings":";;;;;;;;;AASA,SAAS,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE;AAC/C,MAAI,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,KAAK,GAAG,SAAS,IAAI,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,AAAC,CAAC;;AAE7C,SAAQ,SAAS,GAAG,KAAK,EAAE,GAAG,EAAE,KAAK,GAAG,MAAM,EAAG;AAC/C,QAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,QAAI,KAAK,KAAK,KAAK,EAAE;AACnB,aAAO,KAAK,CAAC;KACd;GACF;AACD,SAAO,CAAC,CAAC,CAAC;CACX;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"indexOfNaN-compiled.js","sourcesContent":["/**\n * Gets the index at which the first occurrence of `NaN` is found in `array`.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n */\nfunction indexOfNaN(array, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 0 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    var other = array[index];\n    if (other !== other) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = indexOfNaN;\n"]}