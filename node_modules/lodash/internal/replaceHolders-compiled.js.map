{"version":3,"sources":["replaceHolders.js"],"names":[],"mappings":";AACA,IAAI,WAAW,GAAG,wBAAwB;;;;;;;;;;;AAAC,AAW3C,SAAS,cAAc,CAAC,KAAK,EAAE,WAAW,EAAE;AAC1C,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,QAAQ,GAAG,CAAC,CAAC;MACb,MAAM,GAAG,EAAE,CAAC;;AAEhB,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,KAAK,CAAC,KAAK,CAAC,KAAK,WAAW,EAAE;AAChC,WAAK,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;AAC3B,YAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC;KAC5B;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"replaceHolders-compiled.js","sourcesContent":["/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    if (array[index] === placeholder) {\n      array[index] = PLACEHOLDER;\n      result[++resIndex] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n"]}