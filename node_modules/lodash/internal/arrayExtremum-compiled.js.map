{"version":3,"sources":["arrayExtremum.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,SAAS,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE;AAC3D,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,QAAQ,GAAG,OAAO;MAClB,MAAM,GAAG,QAAQ,CAAC;;AAEtB,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACpB,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;AAE/B,QAAI,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;AACjC,cAAQ,GAAG,OAAO,CAAC;AACnB,YAAM,GAAG,KAAK,CAAC;KAChB;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC","file":"arrayExtremum-compiled.js","sourcesContent":["/**\n * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n * with one argument: (value).\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} comparator The function used to compare values.\n * @param {*} exValue The initial extremum value.\n * @returns {*} Returns the extremum value.\n */\nfunction arrayExtremum(array, iteratee, comparator, exValue) {\n  var index = -1,\n      length = array.length,\n      computed = exValue,\n      result = computed;\n\n  while (++index < length) {\n    var value = array[index],\n        current = +iteratee(value);\n\n    if (comparator(current, computed)) {\n      computed = current;\n      result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayExtremum;\n"]}