{"version":3,"sources":["baseMap.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;IAChC,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;;;;;;;;;;;AAAC,AAW3C,SAAS,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE;AACrC,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,WAAW,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;;AAErE,UAAQ,CAAC,UAAU,EAAE,UAAS,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE;AACpD,UAAM,CAAC,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;GACpD,CAAC,CAAC;AACH,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"baseMap-compiled.js","sourcesContent":["var baseEach = require('./baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n"]}