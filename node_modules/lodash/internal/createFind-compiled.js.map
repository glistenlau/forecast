{"version":3,"sources":["createFind.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;IAChC,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC;IAC1C,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;;;;;;;;;;AAAC,AAUzC,SAAS,UAAU,CAAC,QAAQ,EAAE,SAAS,EAAE;AACvC,SAAO,UAAS,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE;AAC9C,aAAS,GAAG,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAChD,QAAI,OAAO,CAAC,UAAU,CAAC,EAAE;AACvB,UAAI,KAAK,GAAG,aAAa,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AAC5D,aAAO,KAAK,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;KACnD;AACD,WAAO,QAAQ,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAClD,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"createFind-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n"]}