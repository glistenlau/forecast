{"version":3,"sources":["pickByArray.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;;;;;;;;;;;AAAC,AAWrC,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;AAClC,QAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;;AAE1B,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,MAAM,GAAG,EAAE,CAAC;;AAEhB,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACvB,QAAI,GAAG,IAAI,MAAM,EAAE;AACjB,YAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;KAC3B;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"pickByArray-compiled.js","sourcesContent":["var toObject = require('./toObject');\n\n/**\n * A specialized version of `_.pick` which picks `object` properties specified\n * by `props`.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property names to pick.\n * @returns {Object} Returns the new object.\n */\nfunction pickByArray(object, props) {\n  object = toObject(object);\n\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index];\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = pickByArray;\n"]}