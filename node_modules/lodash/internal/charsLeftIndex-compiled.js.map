{"version":3,"sources":["charsLeftIndex.js"],"names":[],"mappings":";;;;;;;;;AASA,SAAS,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE;AACrC,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;AAE3B,SAAO,EAAE,KAAK,GAAG,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE;AACvE,SAAO,KAAK,CAAC;CACd;;AAED,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"charsLeftIndex-compiled.js","sourcesContent":["/**\n * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n * of `string` that is not found in `chars`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @param {string} chars The characters to find.\n * @returns {number} Returns the index of the first character not found in `chars`.\n */\nfunction charsLeftIndex(string, chars) {\n  var index = -1,\n      length = string.length;\n\n  while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n  return index;\n}\n\nmodule.exports = charsLeftIndex;\n"]}