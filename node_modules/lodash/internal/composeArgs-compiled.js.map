{"version":3,"sources":["composeArgs.js"],"names":[],"mappings":";AACA,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG;;;;;;;;;;;;AAAC,AAYzB,SAAS,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC5C,MAAI,aAAa,GAAG,OAAO,CAAC,MAAM;MAC9B,SAAS,GAAG,CAAC,CAAC;MACd,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa,EAAE,CAAC,CAAC;MACtD,SAAS,GAAG,CAAC,CAAC;MACd,UAAU,GAAG,QAAQ,CAAC,MAAM;MAC5B,MAAM,GAAG,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;;AAE5C,SAAO,EAAE,SAAS,GAAG,UAAU,EAAE;AAC/B,UAAM,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;GACzC;AACD,SAAO,EAAE,SAAS,GAAG,aAAa,EAAE;AAClC,UAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;GAC9C;AACD,SAAO,UAAU,EAAE,EAAE;AACnB,UAAM,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;GACzC;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"composeArgs-compiled.js","sourcesContent":["/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array|Object} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders) {\n  var holdersLength = holders.length,\n      argsIndex = -1,\n      argsLength = nativeMax(args.length - holdersLength, 0),\n      leftIndex = -1,\n      leftLength = partials.length,\n      result = Array(leftLength + argsLength);\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    result[holders[argsIndex]] = args[argsIndex];\n  }\n  while (argsLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgs;\n"]}