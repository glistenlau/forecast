{"version":3,"sources":["baseMerge.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC;IAClC,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC;IAC1C,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACpC,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACtC,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,YAAY,GAAG,OAAO,CAAC,sBAAsB,CAAC;IAC9C,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC;;;;;;;;;;;;;;AAAC,AAcrC,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE;AAC7D,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACrB,WAAO,MAAM,CAAC;GACf;AACD,MAAI,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA,AAAC;MAC3E,KAAK,GAAG,QAAQ,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;;AAEhD,WAAS,CAAC,KAAK,IAAI,MAAM,EAAE,UAAS,QAAQ,EAAE,GAAG,EAAE;AACjD,QAAI,KAAK,EAAE;AACT,SAAG,GAAG,QAAQ,CAAC;AACf,cAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;KACxB;AACD,QAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;AAC1B,YAAM,KAAK,MAAM,GAAG,EAAE,CAAA,AAAC,CAAC;AACxB,YAAM,KAAK,MAAM,GAAG,EAAE,CAAA,AAAC,CAAC;AACxB,mBAAa,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;KAC3E,MACI;AACH,UAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;UACnB,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,SAAS;UAClF,QAAQ,GAAG,MAAM,KAAK,SAAS,CAAC;;AAEpC,UAAI,QAAQ,EAAE;AACZ,cAAM,GAAG,QAAQ,CAAC;OACnB;AACD,UAAI,CAAC,MAAM,KAAK,SAAS,IAAK,QAAQ,IAAI,EAAE,GAAG,IAAI,MAAM,CAAA,AAAC,CAAC,KACtD,QAAQ,KAAK,MAAM,KAAK,MAAM,GAAI,MAAM,KAAK,KAAK,GAAK,KAAK,KAAK,KAAK,CAAC,CAAC,AAAC,EAAE;AAC9E,cAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;OACtB;KACF;GACF,CAAC,CAAC;AACH,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"baseMerge-compiled.js","sourcesContent":["var arrayEach = require('./arrayEach'),\n    baseMergeDeep = require('./baseMergeDeep'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isObject = require('../lang/isObject'),\n    isObjectLike = require('./isObjectLike'),\n    isTypedArray = require('../lang/isTypedArray'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns `object`.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n      props = isSrcArr ? undefined : keys(source);\n\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    else {\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n      }\n      if ((result !== undefined || (isSrcArr && !(key in object))) &&\n          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n        object[key] = result;\n      }\n    }\n  });\n  return object;\n}\n\nmodule.exports = baseMerge;\n"]}