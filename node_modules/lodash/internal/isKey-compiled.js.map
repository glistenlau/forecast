{"version":3,"sources":["isKey.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACpC,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;;;AAAC,AAGrC,IAAI,YAAY,GAAG,oDAAoD;IACnE,aAAa,GAAG,OAAO;;;;;;;;;;AAAC,AAU5B,SAAS,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE;AAC5B,MAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AACxB,MAAI,AAAC,IAAI,IAAI,QAAQ,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAK,IAAI,IAAI,QAAQ,EAAE;AACvE,WAAO,IAAI,CAAC;GACb;AACD,MAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAClB,WAAO,KAAK,CAAC;GACd;AACD,MAAI,MAAM,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvC,SAAO,MAAM,IAAK,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,QAAQ,CAAC,MAAM,CAAC,AAAC,CAAC;CAChE;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"isKey-compiled.js","sourcesContent":["var isArray = require('../lang/isArray'),\n    toObject = require('./toObject');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\nmodule.exports = isKey;\n"]}