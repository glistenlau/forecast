{"version":3,"sources":["isLaziable.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC;;;;;;;;;AAAC,AASxC,SAAS,UAAU,CAAC,IAAI,EAAE;AACxB,MAAI,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;MAC5B,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAE7B,MAAI,OAAO,KAAK,IAAI,UAAU,IAAI,EAAE,QAAQ,IAAI,WAAW,CAAC,SAAS,CAAA,AAAC,EAAE;AACtE,WAAO,KAAK,CAAC;GACd;AACD,MAAI,IAAI,KAAK,KAAK,EAAE;AAClB,WAAO,IAAI,CAAC;GACb;AACD,MAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC1B,SAAO,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;CACnC;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"isLaziable-compiled.js","sourcesContent":["var LazyWrapper = require('./LazyWrapper'),\n    getData = require('./getData'),\n    getFuncName = require('./getFuncName'),\n    lodash = require('../chain/lodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n"]}