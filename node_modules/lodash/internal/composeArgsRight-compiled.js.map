{"version":3,"sources":["composeArgsRight.js"],"names":[],"mappings":";AACA,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG;;;;;;;;;;;;AAAC,AAYzB,SAAS,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;AACjD,MAAI,YAAY,GAAG,CAAC,CAAC;MACjB,aAAa,GAAG,OAAO,CAAC,MAAM;MAC9B,SAAS,GAAG,CAAC,CAAC;MACd,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa,EAAE,CAAC,CAAC;MACtD,UAAU,GAAG,CAAC,CAAC;MACf,WAAW,GAAG,QAAQ,CAAC,MAAM;MAC7B,MAAM,GAAG,KAAK,CAAC,UAAU,GAAG,WAAW,CAAC,CAAC;;AAE7C,SAAO,EAAE,SAAS,GAAG,UAAU,EAAE;AAC/B,UAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;GACrC;AACD,MAAI,MAAM,GAAG,SAAS,CAAC;AACvB,SAAO,EAAE,UAAU,GAAG,WAAW,EAAE;AACjC,UAAM,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;GACpD;AACD,SAAO,EAAE,YAAY,GAAG,aAAa,EAAE;AACrC,UAAM,CAAC,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;GAC5D;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC","file":"composeArgsRight-compiled.js","sourcesContent":["/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array|Object} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders) {\n  var holdersIndex = -1,\n      holdersLength = holders.length,\n      argsIndex = -1,\n      argsLength = nativeMax(args.length - holdersLength, 0),\n      rightIndex = -1,\n      rightLength = partials.length,\n      result = Array(argsLength + rightLength);\n\n  while (++argsIndex < argsLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    result[offset + holders[holdersIndex]] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n"]}