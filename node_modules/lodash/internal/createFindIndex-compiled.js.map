{"version":3,"sources":["createFindIndex.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC;;;;;;;;;AAAC,AAS/C,SAAS,eAAe,CAAC,SAAS,EAAE;AAClC,SAAO,UAAS,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE;AACzC,QAAI,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,CAAA,AAAC,EAAE;AAC5B,aAAO,CAAC,CAAC,CAAC;KACX;AACD,aAAS,GAAG,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAChD,WAAO,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;GACnD,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC","file":"createFindIndex-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseFindIndex = require('./baseFindIndex');\n\n/**\n * Creates a `_.findIndex` or `_.findLastIndex` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFindIndex(fromRight) {\n  return function(array, predicate, thisArg) {\n    if (!(array && array.length)) {\n      return -1;\n    }\n    predicate = baseCallback(predicate, thisArg, 3);\n    return baseFindIndex(array, predicate, fromRight);\n  };\n}\n\nmodule.exports = createFindIndex;\n"]}