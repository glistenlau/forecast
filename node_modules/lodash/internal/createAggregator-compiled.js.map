{"version":3,"sources":["createAggregator.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;IAChC,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;;;;;;;;;;AAAC,AAUzC,SAAS,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE;AAC7C,SAAO,UAAS,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC7C,QAAI,MAAM,GAAG,WAAW,GAAG,WAAW,EAAE,GAAG,EAAE,CAAC;AAC9C,YAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;AAE9C,QAAI,OAAO,CAAC,UAAU,CAAC,EAAE;AACvB,UAAI,KAAK,GAAG,CAAC,CAAC;UACV,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;;AAE/B,aAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,YAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AAC9B,cAAM,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;OACvE;KACF,MAAM;AACL,cAAQ,CAAC,UAAU,EAAE,UAAS,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE;AACpD,cAAM,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;OACrE,CAAC,CAAC;KACJ;AACD,WAAO,MAAM,CAAC;GACf,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC","file":"createAggregator-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseEach = require('./baseEach'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n *\n * @private\n * @param {Function} setter The function to set keys and values of the accumulator object.\n * @param {Function} [initializer] The function to initialize the accumulator object.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee, thisArg) {\n    var result = initializer ? initializer() : {};\n    iteratee = baseCallback(iteratee, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        setter(result, value, iteratee(value, index, collection), collection);\n      }\n    } else {\n      baseEach(collection, function(value, key, collection) {\n        setter(result, value, iteratee(value, key, collection), collection);\n      });\n    }\n    return result;\n  };\n}\n\nmodule.exports = createAggregator;\n"]}