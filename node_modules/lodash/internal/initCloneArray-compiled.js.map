{"version":3,"sources":["initCloneArray.js"],"names":[],"mappings":";AACA,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS;;;AAAC,AAGnC,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc;;;;;;;;;AAAC,AAShD,SAAS,cAAc,CAAC,KAAK,EAAE;AAC7B,MAAI,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;;;AAAC,AAG3C,MAAI,MAAM,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;AAChF,UAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC3B,UAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;GAC5B;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"initCloneArray-compiled.js","sourcesContent":["/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n"]}