{"version":3,"sources":["arrayFilter.js"],"names":[],"mappings":";;;;;;;;;AASA,SAAS,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE;AACrC,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,QAAQ,GAAG,CAAC,CAAC;MACb,MAAM,GAAG,EAAE,CAAC;;AAEhB,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,QAAI,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;AAClC,YAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC;KAC5B;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"arrayFilter-compiled.js","sourcesContent":["/**\n * A specialized version of `_.filter` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n"]}