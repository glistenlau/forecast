{"version":3,"sources":["createHybridWrapper.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC;IAClC,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,gBAAgB,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAChD,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC;IAClD,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC;IACpC,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAC5C,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;;;AAAC,AAGnC,IAAI,SAAS,GAAG,CAAC;IACb,aAAa,GAAG,CAAC;IACjB,gBAAgB,GAAG,CAAC;IACpB,UAAU,GAAG,CAAC;IACd,gBAAgB,GAAG,EAAE;IACrB,YAAY,GAAG,EAAE;IACjB,kBAAkB,GAAG,EAAE;IACvB,QAAQ,GAAG,GAAG;;;AAAC,AAGnB,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG;;;;;;;;;;;;;;;;;;;AAAC,AAmBzB,SAAS,mBAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AACvH,MAAI,KAAK,GAAG,OAAO,GAAG,QAAQ;MAC1B,MAAM,GAAG,OAAO,GAAG,SAAS;MAC5B,SAAS,GAAG,OAAO,GAAG,aAAa;MACnC,OAAO,GAAG,OAAO,GAAG,UAAU;MAC9B,YAAY,GAAG,OAAO,GAAG,gBAAgB;MACzC,YAAY,GAAG,OAAO,GAAG,gBAAgB;MACzC,IAAI,GAAG,SAAS,GAAG,SAAS,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;;AAE3D,WAAS,OAAO,GAAG;;;AAGjB,QAAI,MAAM,GAAG,SAAS,CAAC,MAAM;QACzB,KAAK,GAAG,MAAM;QACd,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;;AAEzB,WAAO,KAAK,EAAE,EAAE;AACd,UAAI,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;KAChC;AACD,QAAI,QAAQ,EAAE;AACZ,UAAI,GAAG,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;KAC7C;AACD,QAAI,aAAa,EAAE;AACjB,UAAI,GAAG,gBAAgB,CAAC,IAAI,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;KAC5D;AACD,QAAI,OAAO,IAAI,YAAY,EAAE;AAC3B,UAAI,WAAW,GAAG,OAAO,CAAC,WAAW;UACjC,WAAW,GAAG,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;;AAEpD,YAAM,IAAI,WAAW,CAAC,MAAM,CAAC;AAC7B,UAAI,MAAM,GAAG,KAAK,EAAE;AAClB,YAAI,SAAS,GAAG,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,SAAS;YAClD,QAAQ,GAAG,SAAS,CAAC,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC;YACvC,WAAW,GAAG,OAAO,GAAG,WAAW,GAAG,SAAS;YAC/C,eAAe,GAAG,OAAO,GAAG,SAAS,GAAG,WAAW;YACnD,WAAW,GAAG,OAAO,GAAG,IAAI,GAAG,SAAS;YACxC,gBAAgB,GAAG,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC;;AAElD,eAAO,IAAK,OAAO,GAAG,YAAY,GAAG,kBAAkB,AAAC,CAAC;AACzD,eAAO,IAAI,EAAE,OAAO,GAAG,kBAAkB,GAAG,YAAY,CAAA,AAAC,CAAC;;AAE1D,YAAI,CAAC,YAAY,EAAE;AACjB,iBAAO,IAAI,EAAE,SAAS,GAAG,aAAa,CAAA,AAAC,CAAC;SACzC;AACD,YAAI,OAAO,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,CAAC;YACzH,MAAM,GAAG,mBAAmB,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;;AAE3D,YAAI,UAAU,CAAC,IAAI,CAAC,EAAE;AACpB,iBAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SAC1B;AACD,cAAM,CAAC,WAAW,GAAG,WAAW,CAAC;AACjC,eAAO,MAAM,CAAC;OACf;KACF;AACD,QAAI,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,IAAI;QACrC,EAAE,GAAG,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;;AAE9C,QAAI,MAAM,EAAE;AACV,UAAI,GAAG,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC9B;AACD,QAAI,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;AAC9B,UAAI,CAAC,MAAM,GAAG,GAAG,CAAC;KACnB;AACD,QAAI,IAAI,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,YAAY,OAAO,EAAE;AACtD,QAAE,GAAG,IAAI,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;KACtC;AACD,WAAO,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;GACpC;AACD,SAAO,OAAO,CAAC;CAChB;;AAED,MAAM,CAAC,OAAO,GAAG,mBAAmB,CAAC","file":"createHybridWrapper-compiled.js","sourcesContent":["var arrayCopy = require('./arrayCopy'),\n    composeArgs = require('./composeArgs'),\n    composeArgsRight = require('./composeArgsRight'),\n    createCtorWrapper = require('./createCtorWrapper'),\n    isLaziable = require('./isLaziable'),\n    reorder = require('./reorder'),\n    replaceHolders = require('./replaceHolders'),\n    setData = require('./setData');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    CURRY_BOUND_FLAG = 4,\n    CURRY_FLAG = 8,\n    CURRY_RIGHT_FLAG = 16,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64,\n    ARY_FLAG = 128;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that wraps `func` and invokes it with optional `this`\n * binding of, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & ARY_FLAG,\n      isBind = bitmask & BIND_FLAG,\n      isBindKey = bitmask & BIND_KEY_FLAG,\n      isCurry = bitmask & CURRY_FLAG,\n      isCurryBound = bitmask & CURRY_BOUND_FLAG,\n      isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n      Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n  function wrapper() {\n    // Avoid `arguments` object use disqualifying optimizations by\n    // converting it to an array before providing it to other functions.\n    var length = arguments.length,\n        index = length,\n        args = Array(length);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight);\n    }\n    if (isCurry || isCurryRight) {\n      var placeholder = wrapper.placeholder,\n          argsHolders = replaceHolders(args, placeholder);\n\n      length -= argsHolders.length;\n      if (length < arity) {\n        var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n            newArity = nativeMax(arity - length, 0),\n            newsHolders = isCurry ? argsHolders : undefined,\n            newHoldersRight = isCurry ? undefined : argsHolders,\n            newPartials = isCurry ? args : undefined,\n            newPartialsRight = isCurry ? undefined : args;\n\n        bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n        bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n        if (!isCurryBound) {\n          bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n        }\n        var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n            result = createHybridWrapper.apply(undefined, newData);\n\n        if (isLaziable(func)) {\n          setData(result, newData);\n        }\n        result.placeholder = placeholder;\n        return result;\n      }\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    if (argPos) {\n      args = reorder(args, argPos);\n    }\n    if (isAry && ary < args.length) {\n      args.length = ary;\n    }\n    if (this && this !== global && this instanceof wrapper) {\n      fn = Ctor || createCtorWrapper(func);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybridWrapper;\n"]}