{"version":3,"sources":["assignOwnDefaults.js"],"names":[],"mappings":";AACA,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS;;;AAAC,AAGnC,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc;;;;;;;;;;;;;;;AAAC,AAehD,SAAS,iBAAiB,CAAC,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,MAAM,EAAE;AAChE,SAAO,AAAC,WAAW,KAAK,SAAS,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAClE,WAAW,GACX,WAAW,CAAC;CACjB;;AAED,MAAM,CAAC,OAAO,GAAG,iBAAiB,CAAC","file":"assignOwnDefaults-compiled.js","sourcesContent":["/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.template` to customize its `_.assign` use.\n *\n * **Note:** This function is like `assignDefaults` except that it ignores\n * inherited property values when checking if a property is `undefined`.\n *\n * @private\n * @param {*} objectValue The destination object property value.\n * @param {*} sourceValue The source object property value.\n * @param {string} key The key associated with the object and source values.\n * @param {Object} object The destination object.\n * @returns {*} Returns the value to assign to the destination object.\n */\nfunction assignOwnDefaults(objectValue, sourceValue, key, object) {\n  return (objectValue === undefined || !hasOwnProperty.call(object, key))\n    ? sourceValue\n    : objectValue;\n}\n\nmodule.exports = assignOwnDefaults;\n"]}