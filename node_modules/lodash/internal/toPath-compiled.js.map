{"version":3,"sources":["toPath.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;;;AAAC,AAGzC,IAAI,UAAU,GAAG,uEAAuE;;;AAAC,AAGzF,IAAI,YAAY,GAAG,UAAU;;;;;;;;;AAAC,AAS9B,SAAS,MAAM,CAAC,KAAK,EAAE;AACrB,MAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAClB,WAAO,KAAK,CAAC;GACd;AACD,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,cAAY,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;AAC7E,UAAM,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,GAAI,MAAM,IAAI,KAAK,AAAC,CAAC,CAAC;GAC7E,CAAC,CAAC;AACH,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"toPath-compiled.js","sourcesContent":["var baseToString = require('./baseToString'),\n    isArray = require('../lang/isArray');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = toPath;\n"]}