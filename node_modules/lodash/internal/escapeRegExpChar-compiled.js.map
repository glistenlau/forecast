{"version":3,"sources":["escapeRegExpChar.js"],"names":[],"mappings":";AACA,IAAI,aAAa,GAAG;AAClB,KAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK;AAC1D,KAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK;AAC1D,KAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK;AACtE,KAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK;AACtE,KAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK;CACvE;;;AAAC,AAGF,IAAI,aAAa,GAAG;AAClB,MAAI,EAAE,IAAI;AACV,KAAG,EAAE,GAAG;AACR,MAAI,EAAE,GAAG;AACT,MAAI,EAAE,GAAG;AACT,UAAQ,EAAE,OAAO;AACjB,UAAQ,EAAE,OAAO;CAClB;;;;;;;;;;;AAAC,AAWF,SAAS,gBAAgB,CAAC,GAAG,EAAE,WAAW,EAAE,cAAc,EAAE;AAC1D,MAAI,WAAW,EAAE;AACf,OAAG,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;GAC1B,MAAM,IAAI,cAAc,EAAE;AACzB,OAAG,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;GAC1B;AACD,SAAO,IAAI,GAAG,GAAG,CAAC;CACnB;;AAED,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC","file":"escapeRegExpChar-compiled.js","sourcesContent":["/** Used to escape characters for inclusion in compiled regexes. */\nvar regexpEscapes = {\n  '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n  '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n  'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n  'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n  'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n};\n\n/** Used to escape characters for inclusion in compiled string literals. */\nvar stringEscapes = {\n  '\\\\': '\\\\',\n  \"'\": \"'\",\n  '\\n': 'n',\n  '\\r': 'r',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\n/**\n * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @param {string} leadingChar The capture group for a leading character.\n * @param {string} whitespaceChar The capture group for a whitespace character.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n  if (leadingChar) {\n    chr = regexpEscapes[chr];\n  } else if (whitespaceChar) {\n    chr = stringEscapes[chr];\n  }\n  return '\\\\' + chr;\n}\n\nmodule.exports = escapeRegExpChar;\n"]}