{"version":3,"sources":["baseFlatten.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC;IAClC,WAAW,GAAG,OAAO,CAAC,qBAAqB,CAAC;IAC5C,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACpC,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;;;;;;;;;;;;;AAAC,AAa7C,SAAS,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE;AACpD,QAAM,KAAK,MAAM,GAAG,EAAE,CAAA,AAAC,CAAC;;AAExB,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;;AAE1B,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,QAAI,YAAY,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,KACxC,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAA,AAAC,EAAE;AACtD,UAAI,MAAM,EAAE;;AAEV,mBAAW,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;OAC9C,MAAM;AACL,iBAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;OAC1B;KACF,MAAM,IAAI,CAAC,QAAQ,EAAE;AACpB,YAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;KAC/B;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"baseFlatten-compiled.js","sourcesContent":["var arrayPush = require('./arrayPush'),\n    isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    if (isObjectLike(value) && isArrayLike(value) &&\n        (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n"]}