{"version":3,"sources":["baseGet.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;;;;;;;;;;;;AAAC,AAYrC,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACtC,MAAI,MAAM,IAAI,IAAI,EAAE;AAClB,WAAO;GACR;AACD,MAAI,OAAO,KAAK,SAAS,IAAI,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;AACxD,QAAI,GAAG,CAAC,OAAO,CAAC,CAAC;GAClB;AACD,MAAI,KAAK,GAAG,CAAC;MACT,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;AAEzB,SAAO,MAAM,IAAI,IAAI,IAAI,KAAK,GAAG,MAAM,EAAE;AACvC,UAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;GAChC;AACD,SAAO,AAAC,KAAK,IAAI,KAAK,IAAI,MAAM,GAAI,MAAM,GAAG,SAAS,CAAC;CACxD;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"baseGet-compiled.js","sourcesContent":["var toObject = require('./toObject');\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n"]}