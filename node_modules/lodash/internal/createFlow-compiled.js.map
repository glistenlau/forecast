{"version":3,"sources":["createFlow.js"],"names":[],"mappings":"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","file":"createFlow-compiled.js","sourcesContent":["var LodashWrapper = require('./LodashWrapper'),\n    getData = require('./getData'),\n    getFuncName = require('./getFuncName'),\n    isArray = require('../lang/isArray'),\n    isLaziable = require('./isLaziable');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar CURRY_FLAG = 8,\n    PARTIAL_FLAG = 32,\n    ARY_FLAG = 128,\n    REARG_FLAG = 256;\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return function() {\n    var wrapper,\n        length = arguments.length,\n        index = fromRight ? length : -1,\n        leftIndex = 0,\n        funcs = Array(length);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var func = funcs[leftIndex++] = arguments[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n        wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? -1 : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  };\n}\n\nmodule.exports = createFlow;\n"]}