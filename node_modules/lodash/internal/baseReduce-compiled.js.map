{"version":3,"sources":["baseReduce.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA,SAAS,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE;AACnF,UAAQ,CAAC,UAAU,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE;AACtD,eAAW,GAAG,kBAAkB,IAC3B,kBAAkB,GAAG,KAAK,EAAE,KAAK,CAAA,GAClC,QAAQ,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;GACrD,CAAC,CAAC;AACH,SAAO,WAAW,CAAC;CACpB;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"baseReduce-compiled.js","sourcesContent":["/**\n * The base implementation of `_.reduce` and `_.reduceRight` without support\n * for callback shorthands and `this` binding, which iterates over `collection`\n * using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initFromCollection Specify using the first or last element\n *  of `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initFromCollection\n      ? (initFromCollection = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n"]}