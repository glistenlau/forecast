{"version":3,"sources":["basePullAt.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;;;AAAC,AAGnC,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS;;;AAAC,AAGjC,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM;;;;;;;;;;;AAAC,AAW/B,SAAS,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE;AAClC,MAAI,MAAM,GAAG,KAAK,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACxC,SAAO,MAAM,EAAE,EAAE;AACf,QAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5B,QAAI,KAAK,IAAI,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AACvC,UAAI,QAAQ,GAAG,KAAK,CAAC;AACrB,YAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;KAC9B;GACF;AACD,SAAO,KAAK,CAAC;CACd;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"basePullAt-compiled.js","sourcesContent":["var isIndex = require('./isIndex');\n\n/** Used for native method references. */\nvar arrayProto = Array.prototype;\n\n/** Native method references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * index arguments and capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0;\n  while (length--) {\n    var index = indexes[length];\n    if (index != previous && isIndex(index)) {\n      var previous = index;\n      splice.call(array, index, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAt;\n"]}