{"version":3,"sources":["baseAt.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;;;;;;;;;;;AAAC,AAWnC,SAAS,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE;AACjC,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,KAAK,GAAG,UAAU,IAAI,IAAI;MAC1B,KAAK,GAAG,CAAC,KAAK,IAAI,WAAW,CAAC,UAAU,CAAC;MACzC,MAAM,GAAG,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC;MACtC,WAAW,GAAG,KAAK,CAAC,MAAM;MAC1B,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;;AAEhC,SAAM,EAAE,KAAK,GAAG,WAAW,EAAE;AAC3B,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACvB,QAAI,KAAK,EAAE;AACT,YAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;KACpE,MAAM;AACL,YAAM,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;KACrD;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"baseAt-compiled.js","sourcesContent":["var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex');\n\n/**\n * The base implementation of `_.at` without support for string collections\n * and individual key arguments.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {number[]|string[]} props The property names or indexes of elements to pick.\n * @returns {Array} Returns the new array of picked elements.\n */\nfunction baseAt(collection, props) {\n  var index = -1,\n      isNil = collection == null,\n      isArr = !isNil && isArrayLike(collection),\n      length = isArr ? collection.length : 0,\n      propsLength = props.length,\n      result = Array(propsLength);\n\n  while(++index < propsLength) {\n    var key = props[index];\n    if (isArr) {\n      result[index] = isIndex(key, length) ? collection[key] : undefined;\n    } else {\n      result[index] = isNil ? undefined : collection[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseAt;\n"]}