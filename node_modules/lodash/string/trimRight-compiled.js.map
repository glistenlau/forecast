{"version":3,"sources":["trimRight.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;IAClD,eAAe,GAAG,OAAO,CAAC,6BAA6B,CAAC;IACxD,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACtD,iBAAiB,GAAG,OAAO,CAAC,+BAA+B,CAAC;;;;;;;;;;;;;;;;;;;;AAAC,AAoBjE,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE;AACvC,MAAI,KAAK,GAAG,MAAM,CAAC;AACnB,QAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9B,MAAI,CAAC,MAAM,EAAE;AACX,WAAO,MAAM,CAAC;GACf;AACD,MAAI,KAAK,GAAG,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE;AAC/D,WAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;GACvD;AACD,SAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,MAAM,EAAG,KAAK,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC,CAAC;CACnE;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"trimRight-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString'),\n    charsRightIndex = require('../internal/charsRightIndex'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    trimmedRightIndex = require('../internal/trimmedRightIndex');\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimRight('  abc  ');\n * // => '  abc'\n *\n * _.trimRight('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimRight(string, chars, guard) {\n  var value = string;\n  string = baseToString(string);\n  if (!string) {\n    return string;\n  }\n  if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n    return string.slice(0, trimmedRightIndex(string) + 1);\n  }\n  return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n}\n\nmodule.exports = trimRight;\n"]}