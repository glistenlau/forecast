{"version":3,"sources":["startsWith.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;;;AAAC,AAGvD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAuBzB,SAAS,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;AAC5C,QAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9B,UAAQ,GAAG,QAAQ,IAAI,IAAI,GACvB,CAAC,GACD,SAAS,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC,QAAQ,IAAI,CAAC,AAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;;AAElE,SAAO,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC;CACzD;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"startsWith-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to search.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = baseToString(string);\n  position = position == null\n    ? 0\n    : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n  return string.lastIndexOf(target, position) == position;\n}\n\nmodule.exports = startsWith;\n"]}