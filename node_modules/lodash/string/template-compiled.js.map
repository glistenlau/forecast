{"version":3,"sources":["template.js"],"names":[],"mappings":"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","file":"template-compiled.js","sourcesContent":["var assignOwnDefaults = require('../internal/assignOwnDefaults'),\n    assignWith = require('../internal/assignWith'),\n    attempt = require('../utility/attempt'),\n    baseAssign = require('../internal/baseAssign'),\n    baseToString = require('../internal/baseToString'),\n    baseValues = require('../internal/baseValues'),\n    escapeStringChar = require('../internal/escapeStringChar'),\n    isError = require('../lang/isError'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    keys = require('../object/keys'),\n    reInterpolate = require('../internal/reInterpolate'),\n    templateSettings = require('./templateSettings');\n\n/** Used to match empty string literals in compiled template source. */\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n/** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n/** Used to ensure capturing order of template delimiters. */\nvar reNoMatch = /($^)/;\n\n/** Used to match unescaped characters in compiled string literals. */\nvar reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n/**\n * Creates a compiled template function that can interpolate data properties\n * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n * properties may be accessed as free variables in the template. If a setting\n * object is provided it takes precedence over `_.templateSettings` values.\n *\n * **Note:** In the development build `_.template` utilizes\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n * for easier debugging.\n *\n * For more information on precompiling templates see\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n *\n * For more information on Chrome extension sandboxes see\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The template string.\n * @param {Object} [options] The options object.\n * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n * @param {Object} [options.imports] An object to import into the template as free variables.\n * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n * @param {string} [options.variable] The data object variable name.\n * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n * @returns {Function} Returns the compiled template function.\n * @example\n *\n * // using the \"interpolate\" delimiter to create a compiled template\n * var compiled = _.template('hello <%= user %>!');\n * compiled({ 'user': 'fred' });\n * // => 'hello fred!'\n *\n * // using the HTML \"escape\" delimiter to escape data property values\n * var compiled = _.template('<b><%- value %></b>');\n * compiled({ 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // using the internal `print` function in \"evaluate\" delimiters\n * var compiled = _.template('<% print(\"hello \" + user); %>!');\n * compiled({ 'user': 'barney' });\n * // => 'hello barney!'\n *\n * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n * var compiled = _.template('hello ${ user }!');\n * compiled({ 'user': 'pebbles' });\n * // => 'hello pebbles!'\n *\n * // using custom template delimiters\n * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n * var compiled = _.template('hello {{ user }}!');\n * compiled({ 'user': 'mustache' });\n * // => 'hello mustache!'\n *\n * // using backslashes to treat delimiters as plain text\n * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n * compiled({ 'value': 'ignored' });\n * // => '<%- value %>'\n *\n * // using the `imports` option to import `jQuery` as `jq`\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // using the `sourceURL` option to specify a custom sourceURL for the template\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n *\n * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n * //   var __t, __p = '';\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n * //   return __p;\n * // }\n *\n * // using the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and a stack trace\n * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */\nfunction template(string, options, otherOptions) {\n  // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n  // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n\n  if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n    options = otherOptions = undefined;\n  }\n  string = baseToString(string);\n  options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n  var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n      importsKeys = keys(imports),\n      importsValues = baseValues(imports, importsKeys);\n\n  var isEscaping,\n      isEvaluating,\n      index = 0,\n      interpolate = options.interpolate || reNoMatch,\n      source = \"__p += '\";\n\n  // Compile the regexp to match each delimiter.\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + '|' +\n    interpolate.source + '|' +\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n    (options.evaluate || reNoMatch).source + '|$'\n  , 'g');\n\n  // Use a sourceURL for easier debugging.\n  var sourceURL = 'sourceURL' in options ? '//# sourceURL=' + options.sourceURL + '\\n' : '';\n\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n\n    // Escape characters that can't be included in string literals.\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n    // Replace delimiters with snippets.\n    if (escapeValue) {\n      isEscaping = true;\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n\n    // The JS engine embedded in Adobe products requires returning the `match`\n    // string in order to produce the correct `offset` value.\n    return match;\n  });\n\n  source += \"';\\n\";\n\n  // If `variable` is not specified wrap a with-statement around the generated\n  // code to add the data object to the top of the scope chain.\n  var variable = options.variable;\n  if (!variable) {\n    source = 'with (obj) {\\n' + source + '\\n}\\n';\n  }\n  // Cleanup code by stripping empty strings.\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n    .replace(reEmptyStringMiddle, '$1')\n    .replace(reEmptyStringTrailing, '$1;');\n\n  // Frame code as the function body.\n  source = 'function(' + (variable || 'obj') + ') {\\n' +\n    (variable\n      ? ''\n      : 'obj || (obj = {});\\n'\n    ) +\n    \"var __t, __p = ''\" +\n    (isEscaping\n       ? ', __e = _.escape'\n       : ''\n    ) +\n    (isEvaluating\n      ? ', __j = Array.prototype.join;\\n' +\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\n      : ';\\n'\n    ) +\n    source +\n    'return __p\\n}';\n\n  var result = attempt(function() {\n    return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n  });\n\n  // Provide the compiled function's source by its `toString` method or\n  // the `source` property as a convenience for inlining compiled templates.\n  result.source = source;\n  if (isError(result)) {\n    throw result;\n  }\n  return result;\n}\n\nmodule.exports = template;\n"]}