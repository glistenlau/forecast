{"version":3,"sources":["repeat.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;;;AAAC,AAGvD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK;IACxB,cAAc,GAAG,MAAM,CAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;AAAC,AAsBrC,SAAS,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AACzB,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,QAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9B,GAAC,GAAG,CAAC,CAAC,CAAC;AACP,MAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AAC1C,WAAO,MAAM,CAAC;GACf;;;AAAA,AAGD,KAAG;AACD,QAAI,CAAC,GAAG,CAAC,EAAE;AACT,YAAM,IAAI,MAAM,CAAC;KAClB;AACD,KAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACvB,UAAM,IAAI,MAAM,CAAC;GAClB,QAAQ,CAAC,EAAE;;AAEZ,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"repeat-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeIsFinite = global.isFinite;\n\n/**\n * Repeats the given string `n` times.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to repeat.\n * @param {number} [n=0] The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n * @example\n *\n * _.repeat('*', 3);\n * // => '***'\n *\n * _.repeat('abc', 2);\n * // => 'abcabc'\n *\n * _.repeat('abc', 0);\n * // => ''\n */\nfunction repeat(string, n) {\n  var result = '';\n  string = baseToString(string);\n  n = +n;\n  if (n < 1 || !string || !nativeIsFinite(n)) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    string += string;\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = repeat;\n"]}